-- 1) Load thư viện WazureV1 từ GitHub
local WazureV1 = loadstring(game:HttpGet(
    "https://raw.githubusercontent.com/0xteru/uilibrary/refs/heads/main/Wazure%20V1%20Lib/Source.lua",
    true
))()

-- 2) Khởi tạo GUI
local WazureGui = WazureV1:Start({
    Name            = "W-azure",
    ["Logo Player"] = "rbxassetid://18243105495",
    ["Name Player"] = "SongDaiThanhHuyenTh",
    ["Tab Width"]   = 120,
    Color           = Color3.fromRGB(6, 141, 234),
    ["Custom Toggle"] = false,
    ["Save Config"] = { Folder = "W-azure", ["Name Config"] = "Config" },
    ["CloseCallBack"] = function()
        WazureV1:Notify({
            Title   = "W-azure",
            Content = "UI Closed",
            Logo    = "rbxassetid://18289959127",
            Time    = 1,
            Delay   = 5,
        })
    end
})

-- 3) Services
local Workspace = game:GetService("Workspace")

-- 4) Tạo tất cả các Tab
local tabNames = {
    "Main","Music","Sub Farm","Fruits - Raid","Status","Server",
    "PvP","Player","Sea Event","Leviathan","Prehistoric Event",
    "Webhook","Race V4","Setting","OneClick","OneClickDebug"
}
local Tabs = {}
for _, name in ipairs(tabNames) do
    Tabs[name] = WazureGui:MakeTab(name)
end

-- 5) Ví dụ nội dung cơ bản cho các tab (bạn có thể tuỳ biến lại)
-- Main
Tabs.Main:MakeLabel("=== Welcome to W-azure ===")
Tabs.Main:MakeButton("Test Main", {
    Title   = "Hello",
    Content = "This is Main tab!",
    Logo    = "rbxassetid://18289959127",
    Callback = function()
        WazureV1:Notify({ Title="Main", Content="Main button clicked", Logo="rbxassetid://18289959127", Time=2 })
    end
})

-- Music
do
    local t = Tabs.Music
    local current, sound
    local function valid(v)
        return not (v:lower():find("youtube") or v:lower():find("youtu.be"))
           and (v:match("^%d+$") or v:find("rbxassetid://"))
    end
    local function play(v)
        if sound then sound:Destroy() end
        sound = Instance.new("Sound", game:GetService("SoundService"))
        sound.SoundId = v
        sound.Looped  = true
        sound.Volume  = 1
        sound:Play()
    end
    t:MakeTextInput("Music", {
        Title   = "ID nhạc Roblox",
        Content = "Nhập chỉ số hoặc rbxassetid://ID",
        Callback = function(v) current = v end
    })
    t:MakeButton("Lưu & Phát", {
        Title   = "Music Saved",
        Content = "Đã lưu và phát nhạc!",
        Logo    = "rbxassetid://18289959127",
        Callback = function()
            if current and valid(current) then
                if current:match("^%d+$") then current = "rbxassetid://"..current end
                play(current)
                WazureV1:Notify({ Title="Music", Content="Đang phát: "..current, Logo="rbxassetid://18289959127", Time=2 })
            else
                WazureV1:Notify({ Title="Error", Content="Chỉ nhận ID Roblox!", Logo="rbxassetid://18289959127", Time=2 })
            end
        end
    })
end

-- Sub Farm (stub)
Tabs["Sub Farm"]:MakeSeperator("Auto Farm"):Set("Chưa có logic")
Tabs["Sub Farm"]:MakeButton("Do Farm", { Title="Farm", Content="Farm!", Logo="rbxassetid://18289959127", Callback=function() end })

-- Fruits - Raid (stub)
Tabs["Fruits - Raid"]:MakeSeperator("Auto Fruits Raid"):Set("Chưa có logic")
Tabs["Fruits - Raid"]:MakeButton("Do Fruits", { Title="Fruits", Content="Fruits!", Logo="rbxassetid://18289959127", Callback=function() end })

-- Status
Tabs.Status:MakeButton("Xem Status", {
    Title   = "Status",
    Content = "HP và tọa độ",
    Logo    = "rbxassetid://18289959127",
    Callback = function()
        local pl = game.Players.LocalPlayer
        local h = pl.Character and pl.Character:FindFirstChild("Humanoid")
        local pos = pl.Character and pl.Character.PrimaryPart and pl.Character.PrimaryPart.Position
        if h and pos then
            WazureV1:Notify({
                Title="Status",
                Content=string.format("HP: %.0f, X:%.1f Y:%.1f Z:%.1f", h.Health,pos.X,pos.Y,pos.Z),
                Logo="rbxassetid://18289959127", Time=3
            })
        end
    end
})

-- Server, PvP, Player, Sea Event, Prehistoric Event, Webhook, Race V4, Setting, OneClick, OneClickDebug
-- ... (Bạn lặp lại mẫu như trên nếu cần)

-- 6) Tab "Leviathan": Auto Find Leviathan

-- Leviathan Tab
do
    local t = Tabs["Leviathan"]
    t:MakeSeperator("=== Auto Leviathan❄️ ===")
     :Set("Dịch chuyển cả thuyền lên Y=100 và tiến Z thực sự")

    local beastBoat, moveTask, scanTask
    local autoFind = false
    local foundGate = false
    local speed = 50

    local function notify(title, content)
        WazureV1:Notify({ Title = title, Content = content, Logo = "rbxassetid://18289959127", Time = 3 })
    end

    local function findModel(substr)
        for _, m in ipairs(Workspace:GetDescendants()) do
            if m:IsA("Model") and m.Name:lower():find(substr:lower()) then
                return m
            end
        end
    end

    local function startAutoFind()
        autoFind = true
        foundGate = false

        beastBoat = findModel("Beast Hunter")
        if not beastBoat or not beastBoat.PrimaryPart then
            notify("Leviathan", "Không tìm thấy Beast Hunter!")
            autoFind = false
            return
        end
        local root = beastBoat.PrimaryPart
        root.CFrame = CFrame.new(root.Position.X, 100, root.Position.Z)

        for _, p in ipairs(beastBoat:GetDescendants()) do
            if p:IsA("BasePart") then
                p.CanCollide = false
            end
        end

        notify("Leviathan", "Auto Find BẬT: Bay Y=100 & tiến Z", 2)

        moveTask = task.spawn(function()
            while autoFind and beastBoat and beastBoat.PrimaryPart do
                local dt = task.wait()
                local pos = beastBoat.PrimaryPart.Position
                beastBoat.PrimaryPart.CFrame = CFrame.new(pos.X, 100, pos.Z + speed * dt)
            end
        end)

        scanTask = task.spawn(function()
            while autoFind do
                local gate = Workspace:FindFirstChild("LeviathanGate", true)
                if gate then
                    foundGate = true
                    notify("Leviathan", "Phát hiện Gate! Đang tiếp cận...", 4)
                    local gp = gate.PrimaryPart or gate:FindFirstChildWhichIsA("BasePart")
                    local root = beastBoat and beastBoat.PrimaryPart
                    while autoFind and gp and root do
                        root.CFrame = CFrame.new(gp.Position.X, gp.Position.Y + 10, gp.Position.Z)
                        if (root.Position - gp.Position).Magnitude < 20 then
                            notify("Leviathan", "Đã tới gần Gate, Auto Find sẽ dừng.")
                            stopAutoFind()
                            break
                        end
                        task.wait(0.5)
                    end
                    break
                end
                task.wait(2)
            end
        end)
    end

    function stopAutoFind()
        autoFind = false
        if moveTask then moveTask:Cancel() end
        if scanTask then scanTask:Cancel() end
        if beastBoat then
            for _, p in ipairs(beastBoat:GetDescendants()) do
                if p:IsA("BasePart") then
                    p.CanCollide = true
                end
            end
        end
        notify("Leviathan", "Auto Find TẮT", 2)
    end

    t:MakeToggle("Auto Find Leviathan", {
        Title = "Bay Y=100 & Tiến Z",
        Content = "Dịch chuyển cả thuyền thật",
        Default = false,
        Callback = function(isOn)
            if isOn then
                startAutoFind()
            else
                stopAutoFind()
            end
        end
    })

    t:MakeTextInput("Tốc độ bay (stud/giây)", {
        Title = "Tốc độ Bay",
        Content = "Nhập số tốc độ (ví dụ: 50)",
        Placeholder = "50",
        Callback = function(v)
            local n = tonumber(v)
            if n then
                speed = n
                notify("Leviathan", "Đã chỉnh tốc độ bay: "..n.." stud/giây")
            else
                notify("Leviathan", "Sai định dạng! Nhập số vào.")
            end
        end
    })
end
